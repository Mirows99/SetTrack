---
description: 
globs: 
alwaysApply: false
---
### NEEDS TO BE REWORKED


# Supabase Database Documentation

## Overview
This application uses Supabase as the database backend. Supabase is a powerful open-source Firebase alternative that provides PostgreSQL databases with real-time capabilities, authentication, and storage.

## Database Structure
The database currently consists of three main tables:

### 1. exercise
This table stores individual exercises with their details.

**Schema:**
- `id`: UUID (primary key)
- `created_at`: Timestamp with timezone (default: now())
- `name`: Text (required) - Name of the exercise
- `description`: Text - Detailed description of the exercise
- `muscle_group`: Text - Primary muscle group targeted
- `equipment_needed`: Text - Equipment required for the exercise
- `difficulty_level`: Integer - Difficulty rating (e.g., 1-5)
- `instructions`: Text - Step-by-step instructions for performing the exercise
- `video_url`: Text - URL to demonstration video (optional)

### 2. exercise_preset
This table stores preset configurations for exercises to be used in workout templates.

**Schema:**
- `id`: UUID (primary key)
- `created_at`: Timestamp with timezone (default: now())
- `exercise_id`: UUID (foreign key referencing exercise.id)
- `sets`: Integer - Number of sets
- `reps`: Integer - Number of repetitions
- `rest_time`: Integer - Rest time between sets (in seconds)
- `weight`: Numeric - Default weight (can be null)
- `notes`: Text - Additional notes for this preset

### 3. workout_template
This table stores workout templates composed of multiple exercise presets.

**Schema:**
- `id`: UUID (primary key)
- `created_at`: Timestamp with timezone (default: now())
- `name`: Text (required) - Name of the workout template
- `description`: Text - Description of the workout template
- `user_id`: UUID - ID of the user who created the template
- `is_public`: Boolean - Whether the template is publicly accessible
- `estimated_duration`: Integer - Estimated duration in minutes
- `difficulty_level`: Integer - Overall difficulty rating

## Relationships
- Each `exercise_preset` references one `exercise` through the `exercise_id` foreign key
- A `workout_template` contains multiple `exercise_preset` entries through a junction table (not explicitly defined above)

## Database Access
- Supabase provides a client library to interact with the database
- Row-level security (RLS) policies should be implemented to control access to data
- Authentication is handled through Supabase Auth

## Future Considerations
- Consider adding user profiles table for personalization
- Implement workout logs to track user progress
- Add exercise categories and tags for better organization
- Create favorites/bookmarks functionality for users


